@using Blog_System.Models.Entities
@model Post

@{
    ViewData["Title"] = "Post Details";
}

<div class="container mt-4">
    <div class="card shadow-sm mb-3">
        <div class="card-body">
            <!-- User info -->
            <div class="d-flex align-items-center mb-2">
                <img src="@("/Uploads/" + Model.UserApplication.Image ?? "/images/default-user.png")"
                     class="rounded-circle me-2"
                     style="width:40px; height:40px; object-fit:cover;" />
                <div>
                    <strong>@Model.UserApplication.UserName</strong><br />
                    <small class="text-muted">@Model.PublichDate.ToString("dd MMM yyyy - HH:mm")</small>
                </div>
            </div>

            <!-- Post content -->
            <h5 class="card-title">@Model.Title</h5>
            <p class="card-text">@Model.Content</p>

            @if (!string.IsNullOrEmpty(Model.ImageURL))
            {
                <img src="@("/Uploads/" + Model.ImageURL)"
                     alt="Post Image"
                     class="img-fluid rounded mb-3" />
            }


            <!-- Actions -->
            <div class="d-flex justify-content-between mt-3 border-top pt-2">
                <button id="likeBtn" class="btn btn-sm btn-outline-primary" data-post-id="@Model.Id">
                    👍 Like (<span id="likeCount">@Model.Likes.Count</span>)
                </button>
                <span class="text-muted">
                    💬 Comments: <span id="commentCount">@Model.Comments.Count</span>
                </span>
            </div>
        </div>
    </div>

    <!-- Comments section -->
    <div class="card p-3">
        <h5 class="mb-3">Comments</h5>

        <ul class="list-group list-group-flush" id="commentsList">
            @foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedAt))
            {
                <li class="list-group-item">
                    <div class="d-flex align-items-start">
                        <img src="@(comment.UserApplication.Image ?? "/images/default-user.png")"
                             class="rounded-circle me-2"
                             style="width:30px; height:30px; object-fit:cover;" />
                        <div>
                            <strong>@comment.UserApplication.UserName</strong>
                            <p class="mb-1">@comment.Content</p>
                            <small class="text-muted">@comment.CreatedAt.ToString("dd MMM yyyy - HH:mm")</small>
                        </div>
                    </div>
                </li>
            }
        </ul>

        <div class="mt-3">
            <textarea id="commentContent" class="form-control" placeholder="Write a comment..."></textarea>
            <button id="addCommentBtn" class="btn btn-sm btn-primary mt-2" data-post-id="@Model.Id">Add Comment</button>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        // ✅ Like / Unlike
        $("#likeBtn").click(function () {
            var postId = $(this).data("post-id");
            $.post("/Post/ToggleLike", { postId: postId }, function (res) {
                if (res.success) {
                    let count = parseInt($("#likeCount").text());
                    if (res.liked) {
                        $("#likeCount").text(count + 1);
                        $("#likeBtn").text("👍 Unlike (" + (count + 1) + ")");
                    } else {
                        $("#likeCount").text(count - 1);
                        $("#likeBtn").text("👍 Like (" + (count - 1) + ")");
                    }
                }
            });
        });

        // ✅ Add Comment
        $("#addCommentBtn").click(function () {
            var postId = $(this).data("post-id");
            var content = $("#commentContent").val();

            if (content.trim() === "") return;

            $.post("/Post/AddComment", { postId: postId, content: content }, function (partialView) {
                $("#commentsList").prepend(partialView); // Add latest comment on top
                $("#commentContent").val("");
                let count = parseInt($("#commentCount").text());
                $("#commentCount").text(count + 1);
            });
        });
    </script>
}
